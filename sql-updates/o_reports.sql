/*
From Samawati
*/
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (1,'Incoming Payments','List of all payments coming in','SELECT o_incoming_payments.uid,  o_incoming_payments.amount, o_incoming_payments.comments, o_incoming_payments.mobile_number, o_incoming_payments.transaction_code, o_incoming_payments.loan_id, o_incoming_payments.loan_balance, o_incoming_payments.payment_date, o_incoming_payments.record_method, o_incoming_payments.comments, o_payment_statuses.name as status   FROM o_incoming_payments left join o_payment_statuses on o_payment_statuses.uid = o_incoming_payments.status where o_incoming_payments.status >= 1  AND o_incoming_payments.payment_date BETWEEN {{{start_date}}} AND {{{end_date}}};','SELECT o_incoming_payments.uid,  o_incoming_payments.amount, o_incoming_payments.comments, o_incoming_payments.mobile_number, o_incoming_payments.transaction_code, o_incoming_payments.loan_id, o_incoming_payments.loan_balance, o_incoming_payments.payment_date, o_incoming_payments.record_method, o_incoming_payments.comments, o_payment_statuses.name as status   FROM o_incoming_payments left join o_payment_statuses on o_payment_statuses.uid = o_incoming_payments.status where o_incoming_payments.status >= 1  AND o_incoming_payments.payment_date BETWEEN {{{start_date}}} AND {{{end_date}}} AND o_incoming_payments.branch_id = {{{branch}}};',1,'2021-06-18 18:23:30','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (3,'Loan Disbursement Reports','Show loans disbursed in a set period','SELECT o_loans.uid, o_customers.full_name, o_branches.name as Branch , o_loans.account_number as Phone, o_loans.disbursed_amount as Amount_Disbursed, o_loans.total_addons as Interest, o_loans.total_repayable_amount as Amount_Repayable, o_loans.total_repaid as Amount_Repaid, o_loans.loan_balance as Balance, o_loans.given_date as Disbursement_Date, \no_loans.final_due_date as Repayment_Date, lo.name as LO, co.name as CO, o_loans.application_mode, o_loan_statuses.name as Status FROM o_loans left join o_customers on o_customers.uid = o_loans.customer_id left join o_loan_statuses on o_loans.status = o_loan_statuses.uid left join o_branches on o_loans.current_branch = o_branches.uid left join o_users lo on o_loans.current_lo = lo.uid  left join o_users co on o_loans.current_co = co.uid  where o_loans.disbursed = 1 AND o_loans.status != 0 AND o_loans.disbursed=1 AND o_loans.given_date  BETWEEN {{{start_date}}} AND {{{end_date}}};','SELECT o_loans.uid, o_customers.full_name, o_branches.name as Branch , o_loans.account_number as Phone, o_loans.disbursed_amount as Amount_Disbursed, o_loans.total_addons as Interest, o_loans.total_repayable_amount as Amount_Repayable, o_loans.total_repaid as Amount_Repaid, o_loans.loan_balance as Balance, o_loans.given_date as Disbursement_Date, \no_loans.final_due_date as Repayment_Date, lo.name as LO, co.name as CO, o_loans.application_mode, o_loan_statuses.name as Status FROM o_loans left join o_customers on o_customers.uid = o_loans.customer_id left join o_loan_statuses on o_loans.status = o_loan_statuses.uid left join o_branches on o_loans.current_branch = o_branches.uid left join o_users lo on o_loans.current_lo = lo.uid  left join o_users co on o_loans.current_co = co.uid  where o_loans.disbursed = 1 AND o_loans.status != 0 AND o_loans.disbursed=1 AND o_loans.given_date  BETWEEN {{{start_date}}} AND {{{end_date}}} AND o_loans.current_branch = {{{branch}}};',51,'2021-08-08 12:00:26','',0);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (4,'Customer Acquisition','List of customers who have joined the system in a given time period','SELECT o_customers.uid, o_customers.full_name, o_customers.primary_mobile, o_branches.name as branch_name, o_users.name as Added_by,  o_customers.physical_address, o_customers.national_id, o_customers.dob, o_customers.added_date, o_customers.loan_limit FROM o_customers left join o_branches on o_branches.uid = o_customers.branch left join o_users on o_users.uid = o_customers.added_by where DATE(o_customers.added_date) between {{{start_date}}} AND {{{end_date}}} AND o_customers.status = 1;','SELECT o_customers.uid, o_customers.full_name, o_customers.primary_mobile, o_branches.name as branch_name, o_users.name as Added_by,  o_customers.physical_address, o_customers.national_id, o_customers.dob, o_customers.added_date, o_customers.loan_limit FROM o_customers left join o_branches on o_branches.uid = o_customers.branch left join o_users on o_users.uid = o_customers.added_by where DATE(o_customers.added_date) between {{{start_date}}} AND {{{end_date}}} AND o_customers.status = 1 AND o_customers.branch = {{{branch}}};',1,'2022-01-11 16:05:14','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (5,'Defaulters Report','Show a list of defaulters by date they defaulted','SELECT o_loans.uid, o_customers.full_name, o_customers.national_id, o_branches.name as Branch , o_loans.account_number as Phone, o_loans.loan_amount as Principal, o_loans.total_repayable_amount as TotalAmount, o_loans.total_repaid as Total_paid, o_loans.loan_balance as Balance, o_loans.transaction_code as Transcode, o_loans.given_date as Disbursement_Date, o_loans.final_due_date as Due_Date, \n o_loans.disbursed_amount as Amount_Disbursed, o_loans.total_addons as Interest, lo.name as LO, co.name as CO, o_loan_statuses.name as Status FROM o_loans left join o_customers on o_customers.uid = o_loans.customer_id left join o_loan_statuses on o_loans.status = o_loan_statuses.uid left join o_branches on o_loans.current_branch = o_branches.uid left join o_users lo on o_loans.current_lo = lo.uid  left join o_users co on o_loans.current_co = co.uid  where o_loans.disbursed = 1 AND o_loans.paid = 0 AND o_loans.status NOT IN (0, 10) AND o_loans.final_due_date  BETWEEN {{{start_date}}} AND {{{end_date}}};','SELECT o_loans.uid, o_customers.full_name, o_customers.national_id, o_branches.name as Branch , o_loans.account_number as Phone, o_loans.loan_amount as Principal, o_loans.total_repayable_amount as TotalAmount, o_loans.total_repaid as Total_paid, o_loans.loan_balance as Balance, o_loans.transaction_code as Transcode, o_loans.given_date as Disbursement_Date, o_loans.final_due_date as Due_Date, \n o_loans.disbursed_amount as Amount_Disbursed, o_loans.total_addons as Interest, lo.name as LO, co.name as CO, o_loan_statuses.name as Status FROM o_loans left join o_customers on o_customers.uid = o_loans.customer_id left join o_loan_statuses on o_loans.status = o_loan_statuses.uid left join o_branches on o_loans.current_branch = o_branches.uid left join o_users lo on o_loans.current_lo = lo.uid  left join o_users co on o_loans.current_co = co.uid  where o_loans.disbursed = 1 AND o_loans.paid = 0 AND o_loans.status NOT IN (0, 10) AND o_loans.final_due_date  BETWEEN {{{start_date}}} AND {{{end_date}}} AND o_loans.current_branch = {{{branch}}};',1,'2022-03-25 10:31:57','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (6,'Loans Falling Due','Show a list of Loans falling due in a particular date','SELECT o_loans.uid, o_customers.full_name, o_branches.name as Branch , o_loans.account_number as Phone, o_loans.loan_amount as Principal, o_loans.total_repayable_amount as TotalAmount, o_loans.total_repaid as Total_paid, o_loans.loan_balance as Balance, o_loans.transaction_code as Transcode, o_loans.given_date as Disbursement_Date, o_loans.final_due_date as Due_Date, \n o_loans.disbursed_amount as Amount_Disbursed, o_loans.total_addons as Interest, lo.name as LO, co.name as CO, o_loan_statuses.name as Status FROM o_loans left join o_customers on o_customers.uid = o_loans.customer_id left join o_loan_statuses on o_loans.status = o_loan_statuses.uid left join o_branches on o_loans.current_branch = o_branches.uid left join o_users lo on o_loans.current_lo = lo.uid  left join o_users co on o_loans.current_co = co.uid  where o_loans.disbursed = 1 AND o_loans.status != 0 AND o_loans.final_due_date  BETWEEN {{{start_date}}} AND {{{end_date}}};','SELECT o_loans.uid, o_customers.full_name, o_branches.name as Branch , o_loans.account_number as Phone, o_loans.loan_amount as Principal, o_loans.total_repayable_amount as TotalAmount, o_loans.total_repaid as Total_paid, o_loans.loan_balance as Balance, o_loans.transaction_code as Transcode, o_loans.given_date as Disbursement_Date, o_loans.final_due_date as Due_Date, \n o_loans.disbursed_amount as Amount_Disbursed, o_loans.total_addons as Interest, lo.name as LO, co.name as CO, o_loan_statuses.name as Status FROM o_loans left join o_customers on o_customers.uid = o_loans.customer_id left join o_loan_statuses on o_loans.status = o_loan_statuses.uid left join o_branches on o_loans.current_branch = o_branches.uid left join o_users lo on o_loans.current_lo = lo.uid  left join o_users co on o_loans.current_co = co.uid  where o_loans.disbursed = 1 AND o_loans.status != 0 AND o_loans.final_due_date  BETWEEN {{{start_date}}} AND {{{end_date}}} AND o_loans.current_branch={{{branch}}};',1,'2022-03-25 10:40:15','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (7,'Missing Customer Accounts','Accounts that may have been deleted by mistake','SELECT * from o_customers WHERE status = 0 ;',NULL,1,'2022-05-09 16:50:55','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (8,'Bulk SMS','Show a List of outgoing SMS','SELECT uid, phone, message_body, queued_date as date_created, status FROM o_sms_outgoing WHERE DATE (queued_date) BETWEEN {{{start_date}}} AND {{{end_date}}};','',1,'2022-05-10 16:08:33','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (9,'Dormant Customers','List of customers who have limits but have not borrowed','SELECT c.uid, c.full_name, c.primary_mobile, c.national_id, c.gender, c.loan_limit, c.added_date, b.name as branch from o_customers c left join o_branches\n b on c.branch = b.uid where c.loan_limit >= 0 AND c.status = 1 AND not exists (select uid from o_loans l where l.customer_id = c.uid \nAND l.disbursed = 1  AND l.paid = 0 );',NULL,1,'2022-06-23 13:22:23','',0);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (10,'Leads','List of all leads','SELECT o_customers.uid, o_customers.full_name, o_customers.primary_mobile, o_branches.name as branch_name, o_users.name as Added_by,  o_customers.physical_address, o_customers.national_id, o_customers.dob, o_customers.added_date, json_extract(o_customers.sec_data, \'$.\"51\"\') as lead_type FROM o_customers left join o_branches on o_branches.uid = o_customers.branch left join o_users on o_users.uid = o_customers.added_by where DATE(o_customers.added_date) between {{{start_date}}} AND {{{end_date}}} AND o_customers.status = 3;','SELECT o_customers.uid, o_customers.full_name, o_customers.primary_mobile, o_branches.name as branch_name, o_users.name as Added_by,  o_customers.physical_address, o_customers.national_id, o_customers.dob, o_customers.added_date, json_extract(o_customers.sec_data, \'$.\"51\"\') as lead_type FROM o_customers left join o_branches on o_branches.uid = o_customers.branch left join o_users on o_users.uid = o_customers.added_by where DATE(o_customers.added_date) between {{{start_date}}} AND {{{end_date}}} AND o_customers.status = 3 AND o_customers.branch={{{branch}}};',1,'2022-08-25 10:39:01','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (11,'Agent Collections','A list of collections made by agents','SELECT o_incoming_payments.uid as payment_id, o_incoming_payments.amount as payment_amount, o_incoming_payments.payment_date as payment_date,  o_incoming_payments.transaction_code \nas Mpesa_code, o_incoming_payments.loan_id as Loan_id, o_loans.loan_amount as loan_amount, o_loans.given_date as loan_given_date, o_loans.final_due_date as loan_due_date, \no_loans.loan_balance as loan_balance, o_users.name as agent_name, o_users.email as agent_email, o_branches.name as branch_name, o_loan_statuses.name as loan_status FROM \nmaria_simple.o_incoming_payments\n  left join o_loans on \no_loans.uid = o_incoming_payments.loan_id left join o_customers on o_customers.uid = o_loans.customer_id  left join o_users\n on o_users.uid = o_incoming_payments.added_by left join o_branches on o_branches.uid = o_incoming_payments.branch_id \n left join o_loan_statuses on o_loan_statuses.uid = o_loans.status where o_incoming_payments.status = 1 AND o_users.status = 1 AND o_incoming_payments.payment_date between {{{start_date}}} AND {{{end_date}}} order by o_incoming_payments.payment_date desc;',NULL,1,'2022-09-23 15:12:13','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (12,'Staff Codes','All staff members and their code','SELECT uid as code, name from o_users where status=1 AND branch > 1 ;',NULL,1,'2022-10-05 16:59:42','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (13,'Staff List','List of all staff','SELECT o_users.uid, o_users.name, o_users.email, o_users.phone, o_users.join_date , o_users.tag, o_staff_statuses.name as status,\n o_branches.name as branch FROM o_users left join o_user_groups on o_user_groups.uid = o_users.user_group left join o_branches \n on o_branches.uid = o_users.branch left join o_staff_statuses on o_staff_statuses.uid = o_users.status;',NULL,1,'2022-10-19 15:32:11','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (14,'Queued Loans','Loans Pending Disbursement by system','SELECT o_mpesa_queues.uid, o_mpesa_queues.loan_id, o_customers.full_name as customer_name ,o_loans.account_number as mobile_number , o_loans.customer_id as cid, \n o_mpesa_queues.amount, o_mpesa_queues.added_date, o_mpesa_queues.status FROM maria_simple.o_mpesa_queues \nleft join o_loans on o_loans.uid = o_mpesa_queues.loan_id left\njoin o_customers on o_customers.uid = o_loans.customer_id where o_mpesa_queues.status=1  order by uid desc;',NULL,1,'2023-03-03 00:00:00',' ',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (15,'Rejected Loans','All the loans rejected during a specified period','SELECT o_loans.uid, o_customers.full_name, o_branches.name as Branch , o_loans.account_number as Phone, o_loans.loan_amount as Principal,\no_loans.transaction_code as Transcode, o_loans.given_date \nas Disbursement_Date,  lo.name as LO, co.name as CO, o_loans.application_mode FROM o_loans \nleft join o_customers on o_customers.uid = o_loans.customer_id \nleft join o_branches on o_loans.current_branch = o_branches.uid left join o_users lo on o_loans.current_lo = lo.uid  left join o_users co \non o_loans.current_co = co.uid  where o_loans.status = 6  AND o_loans.given_date  \nBETWEEN {{{start_date}}} AND {{{end_date}}};','SELECT o_loans.uid, o_customers.full_name, o_branches.name as Branch , o_loans.account_number as Phone, o_loans.loan_amount as Principal,\no_loans.transaction_code as Transcode, o_loans.given_date \nas Disbursement_Date,  lo.name as LO, co.name as CO, o_loans.application_mode FROM o_loans \nleft join o_customers on o_customers.uid = o_loans.customer_id \nleft join o_branches on o_loans.current_branch = o_branches.uid left join o_users lo on o_loans.current_lo = lo.uid  left join o_users co \non o_loans.current_co = co.uid  where o_loans.status = 6  AND o_loans.given_date  \nBETWEEN {{{start_date}}} AND {{{end_date}}} AND o_loans.current_branch = {{{branch}}};',1,'2023-03-09 00:00:00',' ',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (16,'Pending Disbursement','Loans pending disbursement','SELECT o_loans.uid, o_customers.full_name, o_branches.name as Branch , o_loans.account_number as Phone, o_loans.loan_amount as Principal,\no_loans.transaction_code as Transcode, o_loans.given_date \nas Disbursement_Date,  lo.name as LO, co.name as CO, o_loans.application_mode FROM o_loans \nleft join o_customers on o_customers.uid = o_loans.customer_id \nleft join o_branches on o_loans.current_branch = o_branches.uid left join o_users lo on o_loans.current_lo = lo.uid  left join o_users co \non o_loans.current_co = co.uid  where o_loans.status = 2  AND o_loans.given_date  \nBETWEEN {{{start_date}}} AND {{{end_date}}};','SELECT o_loans.uid, o_customers.full_name, o_branches.name as Branch , o_loans.account_number as Phone, o_loans.loan_amount as Principal,\no_loans.transaction_code as Transcode, o_loans.given_date \nas Disbursement_Date,  lo.name as LO, co.name as CO, o_loans.application_mode FROM o_loans \nleft join o_customers on o_customers.uid = o_loans.customer_id \nleft join o_branches on o_loans.current_branch = o_branches.uid left join o_users lo on o_loans.current_lo = lo.uid  left join o_users co \non o_loans.current_co = co.uid  where o_loans.status = 2  AND o_loans.given_date  \nBETWEEN {{{start_date}}} AND {{{end_date}}} AND o_loans.current_branch = {{{branch}}};',1,'2023-03-09 00:00:00',' ',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (17,'Partial Payments Report','Show a list of accounts and their partial payments','SELECT o_loans.uid, o_customers.full_name, o_branches.name as Branch , o_loans.account_number as Phone, o_loans.loan_amount as Principal, \no_loans.total_repayable_amount as TotalAmount, o_loans.total_repaid, o_loans.loan_balance as Balance,\n concat(round((o_loans.total_repaid / NULLIF(o_loans.total_repayable_amount, 0)) * 100, 2),\'%\') AS Rate, o_loans.transaction_code as Transcode, \n o_loans.given_date as Disbursement_Date, \no_loans.final_due_date as Repayment_Date,  lo.name as LO, co.name as CO, o_loan_statuses.name as Status \nFROM o_loans left join o_customers on o_customers.uid = o_loans.customer_id left join o_loan_statuses on o_loans.status = o_loan_statuses.uid \nleft join o_branches on o_loans.current_branch = o_branches.uid left join o_users lo on o_loans.current_lo = lo.uid  left join o_users co \non o_loans.current_co = co.uid  where o_loans.disbursed = 1 AND o_loans.status != 0 \nAND o_loans.disbursed=1 AND o_loans.given_date BETWEEN {{{start_date}}} AND {{{end_date}}};','SELECT o_loans.uid, o_customers.full_name, o_branches.name as Branch , o_loans.account_number as Phone, o_loans.loan_amount as Principal, \no_loans.total_repayable_amount as TotalAmount, o_loans.total_repaid, o_loans.loan_balance as Balance,\n concat(round((o_loans.total_repaid / NULLIF(o_loans.total_repayable_amount, 0)) * 100, 2),\'%\') AS Rate, o_loans.transaction_code as Transcode, \n o_loans.given_date as Disbursement_Date, \no_loans.final_due_date as Repayment_Date,  lo.name as LO, co.name as CO, o_loan_statuses.name as Status \nFROM o_loans left join o_customers on o_customers.uid = o_loans.customer_id left join o_loan_statuses on o_loans.status = o_loan_statuses.uid \nleft join o_branches on o_loans.current_branch = o_branches.uid left join o_users lo on o_loans.current_lo = lo.uid  left join o_users co \non o_loans.current_co = co.uid  where o_loans.disbursed = 1 AND o_loans.status != 0 \nAND o_loans.disbursed=1 AND o_loans.given_date BETWEEN {{{start_date}}} AND {{{end_date}}} AND o_loans.current_branch = {{{branch}}};',1,'2023-03-28 10:58:20','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (18,'Unallocated Payments','List of payments that have not been allocated','SELECT o_incoming_payments.uid,  o_incoming_payments.amount, o_incoming_payments.comments, o_incoming_payments.mobile_number, o_incoming_payments.transaction_code, o_incoming_payments.loan_id, o_incoming_payments.payment_date  FROM o_incoming_payments  where o_incoming_payments.status = 1 AND o_incoming_payments.loan_id = 0 AND o_incoming_payments.payment_date BETWEEN {{{start_date}}} AND {{{end_date}}};',NULL,1,'2023-04-05 12:28:42','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (19,'Collected By Agent','List of payments collected by CC/FA/EDC Agents','SELECT o_incoming_payments.uid as pay_id, o_customers.full_name as CustomerName, o_loans.account_number as mobile_number, o_branches.name as Branch, o_incoming_payments.amount, o_incoming_payments.transaction_code, o_incoming_payments.loan_id,\no_incoming_payments.payment_date, o_users.name as AgentName, o_loans.allocation  FROM maria_simple.o_incoming_payments left join o_customers on o_customers.uid = o_incoming_payments.customer_id left join o_branches on o_branches.uid = o_incoming_payments.branch_id\nleft join o_users on o_users.uid = o_incoming_payments.collected_by left join o_loans on o_loans.uid = o_incoming_payments.loan_id where o_incoming_payments.status = 1 AND o_loans.allocation in (\'CC\',\'FA\',\'EDC\') AND o_incoming_payments.payment_date BETWEEN {{{start_date}}} AND {{{end_date}}} order by o_incoming_payments.uid desc, o_loans.allocation;','SELECT o_incoming_payments.uid as pay_id, o_customers.full_name as CustomerName, o_loans.account_number as mobile_number, o_branches.name as Branch, o_incoming_payments.amount, o_incoming_payments.transaction_code, o_incoming_payments.loan_id,\no_incoming_payments.payment_date, o_users.name as AgentName, o_loans.allocation  FROM maria_simple.o_incoming_payments left join o_customers on o_customers.uid = o_incoming_payments.customer_id left join o_branches on o_branches.uid = o_incoming_payments.branch_id\nleft join o_users on o_users.uid = o_incoming_payments.collected_by left join o_loans on o_loans.uid = o_incoming_payments.loan_id where o_incoming_payments.status = 1 AND o_loans.allocation in (\'CC\',\'FA\',\'EDC\') AND o_incoming_payments.payment_date BETWEEN {{{start_date}}} AND {{{end_date}}} order by o_incoming_payments.uid desc, o_loans.allocation;',1,'2023-05-08 16:37:29','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (20,'Deleted and Rejected Loans','List of loans Deleted or Rejected','SELECT o_loans.uid, o_customers.full_name, o_branches.name as Branch , o_loans.account_number as Phone, o_loans.loan_amount as Principal, o_loans.total_repayable_amount as TotalAmount, o_loans.loan_balance as Balance, o_loans.transaction_code as Transcode, o_loans.given_date as Disbursement_Date, \no_loans.final_due_date as Repayment_Date, o_loans.disbursed_amount as Amount_Disbursed, o_loans.total_addons as Interest, lo.name as LO, co.name as CO, o_loans.application_mode, COALESCE(o_loan_statuses.name ,\'Deleted\') as Status FROM o_loans left join o_customers on o_customers.uid = o_loans.customer_id left join o_loan_statuses on  o_loans.status  = o_loan_statuses.uid left join o_branches on o_loans.current_branch = o_branches.uid left join o_users lo on o_loans.current_lo = lo.uid  left join o_users co on o_loans.current_co = co.uid  where  o_loans.status IN (0,6) AND o_loans.given_date  BETWEEN {{{start_date}}} AND {{{end_date}}};','SELECT o_loans.uid, o_customers.full_name, o_branches.name as Branch , o_loans.account_number as Phone, o_loans.loan_amount as Principal, o_loans.total_repayable_amount as TotalAmount, o_loans.loan_balance as Balance, o_loans.transaction_code as Transcode, o_loans.given_date as Disbursement_Date, \no_loans.final_due_date as Repayment_Date, o_loans.disbursed_amount as Amount_Disbursed, o_loans.total_addons as Interest, lo.name as LO, co.name as CO, o_loans.application_mode, COALESCE(o_loan_statuses.name ,\'Deleted\') as Status FROM o_loans left join o_customers on o_customers.uid = o_loans.customer_id left join o_loan_statuses on  o_loans.status  = o_loan_statuses.uid left join o_branches on o_loans.current_branch = o_branches.uid left join o_users lo on o_loans.current_lo = lo.uid  left join o_users co on o_loans.current_co = co.uid  where  o_loans.status IN (0,6) AND o_loans.given_date  BETWEEN {{{start_date}}} AND {{{end_date}}} AND o_loans.current_branch = {{{branch}}};',1,'2023-05-12 15:01:44','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (21,'Logs','List of logs','SELECT o_events.uid, o_events.tbl, o_events.fld, o_events.event_details, o_events.event_date FROM maria_simple.o_events WHERE DATE(event_date) between {{{start_date}}} AND {{{end_date}}} AND status=1;',NULL,1,'2023-06-05 16:10:47','',0);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (22,'Payments with customer ID and not Loan ID','List of payments with a customer ID but no loan ID','SELECT o_incoming_payments.uid,  o_incoming_payments.amount, o_incoming_payments.comments, o_incoming_payments.mobile_number, o_incoming_payments.transaction_code, o_incoming_payments.loan_id, o_incoming_payments.loan_balance, o_incoming_payments.payment_date, o_payment_statuses.name as status   FROM o_incoming_payments left join o_payment_statuses on o_payment_statuses.uid = o_incoming_payments.status where o_incoming_payments.status >= 1 AND customer_id > 0 AND loan_id = 0  AND o_incoming_payments.payment_date BETWEEN {{{start_date}}} AND {{{end_date}}};','SELECT o_incoming_payments.uid,  o_incoming_payments.amount, o_incoming_payments.comments, o_incoming_payments.mobile_number, o_incoming_payments.transaction_code, o_incoming_payments.loan_id, o_incoming_payments.loan_balance, o_incoming_payments.payment_date, o_payment_statuses.name as status   FROM o_incoming_payments left join o_payment_statuses on o_payment_statuses.uid = o_incoming_payments.status where o_incoming_payments.status >= 1 AND customer_id > 0 AND loan_id = 0  AND o_incoming_payments.payment_date BETWEEN {{{start_date}}} AND {{{end_date}}} AND o_incoming_payments.branch_id = {{{branch}}};',1,'2023-08-02 17:19:07','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (23,'Staff Member Logs','Shows a list of logs staff members','SELECT \n    *\nFROM\n    o_events\nWHERE\n    event_by = {{staff_id}}\n        AND event_date BETWEEN {{start_date}} AND {{end_date}}\nORDER BY uid DESC;\n',NULL,1,'2023-10-30 10:04:23',NULL,0);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (24,'SMS Outgoing','List of outgoing messages','SELECT o_sms_outgoing.uid, o_customers.full_name, o_sms_outgoing.phone, o_sms_outgoing.message_body, o_sms_outgoing.queued_date \nas initiated_date, o_sms_outgoing.sent_date, CASE\n        WHEN o_sms_outgoing.status = 1 THEN \'Queued\'\n        WHEN o_sms_outgoing.status = 2 THEN \'Sent\'\n        ELSE \'Unknown\'\n    END AS status\n FROM o_sms_outgoing  left join o_customers on o_customers.primary_mobile = o_sms_outgoing.phone \n where o_sms_outgoing.status != 0 AND date(o_sms_outgoing.queued_date) between  {{{start_date}}} AND {{{end_date}}};','',1,'2023-10-30 10:04:23','',1);


/*
///----From Stawika
*/
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'New Registrations','Shows all customers who have signed up in a given period of time','SELECT uid, full_name, primary_mobile, email_address, physical_address, national_id, gender, loan_limit, added_date FROM stawika_db.o_customers where date(added_date) BETWEEN {{{start_date}}} AND  {{{end_date}}};',NULL,1,'2022-03-28 12:07:42','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'Limits','Show list of customer limits','SELECT uid, full_name, primary_mobile, email_address, national_id,  date(added_date), loan_limit FROM stawika_db.o_customers where loan_limit > 0;',NULL,1,'2022-04-20 16:17:57','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'Incoming Payments Breakdown','Show list of incoming payments and the loan details','SELECT o_incoming_payments.uid, o_loans.account_number, o_incoming_payments.amount, o_incoming_payments.transaction_code, o_incoming_payments.payment_date,\n o_loans.loan_amount, o_loan_products.name as product, o_loans.total_repayable_amount, o_loans.given_date, o_loans.total_addons as Interests_and_fees, o_loans.total_repaid, o_loans.loan_balance from o_incoming_payments inner join o_loans on o_loans.uid = o_incoming_payments.loan_id left join o_loan_products on o_loan_products.uid = o_loans.product_id where o_incoming_payments.status = 1 AND o_incoming_payments.payment_date  BETWEEN {{{start_date}}} AND {{{end_date}}};','',1,'2022-05-03 08:39:46','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'Undisbursed Loans','Show a List of loans that have not been disbursed','SELECT o_loans.uid, o_customers.full_name, o_loans.account_number as Phone, o_loans.loan_amount as Principal, o_loans.total_repayable_amount as TotalAmount, o_loans.loan_balance as Balance, o_loan_products.name as product, o_loans.transaction_code as Transcode, o_loans.given_date as Disbursement_Date, \no_loans.final_due_date as Repayment_Date,  o_loans.total_addons as Interest,  o_loan_statuses.name as Status FROM o_loans inner join o_customers on o_customers.uid = o_loans.customer_id join o_loan_products on o_loan_products.uid = o_loans.product_id inner join o_loan_statuses on o_loans.status = o_loan_statuses.uid   where o_loans.disbursed = 0 AND o_loans.status NOT IN (6,10,11) AND o_loans.status != 0 AND o_loans.given_date  BETWEEN {{{start_date}}} AND {{{end_date}}};',NULL,1,'2022-05-20 10:51:33','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'Repeat Customers with no Limits','Customers who have accessed USSD but do not have limits and have borrowed before','SELECT o_ussd_sessions.uid, o_customers.full_name, o_customers.added_date, o_ussd_sessions.mobile_number, o_customers.national_id, o_ussd_sessions.info_supplied as USSD_CONVERSATION FROM stawika_db.o_ussd_sessions inner join o_loans on o_ussd_sessions.mobile_number = o_loans.account_number\ninner join o_customers on o_customers.primary_mobile = o_ussd_sessions.mobile_number WHERE o_loans.disbursed = 1 AND o_ussd_sessions.info_supplied LIKE \'%statement%\' AND DATE(o_ussd_sessions.started_date) BETWEEN {{{start_date}}} AND {{{end_date}}} GROUP BY o_ussd_sessions.mobile_number;',NULL,1,'2022-05-20 12:05:06','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'Product Allocations','Check which product each customer is allowed to borrow. No time filters','SELECT o_customer_products.uid, o_customers.full_name, o_customers.primary_mobile, o_customers.loan_limit, o_loan_products.name as product_name\n FROM stawika_db.o_customer_products inner join o_customers on o_customers.uid = o_customer_products.customer_id inner join o_loan_products on o_loan_products.uid = \n o_customer_products.product_id;',NULL,1,'2022-06-07 17:32:00','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'Limit Updates','Limits Changes for given period of time','SELECT o_customer_limits.uid, o_customers.full_name, o_customers.primary_mobile, o_customer_limits.amount, o_customer_limits.given_date, o_customer_limits.comments FROM stawika_db.o_customer_limits inner join o_customers on o_customers.uid = o_customer_limits.customer_uid where o_customer_limits.status = 1 AND date(given_date) BETWEEN {{{start_date}}} AND {{{end_date}}};',NULL,1,'2022-06-09 12:00:05','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'Automatically Disbursed Loans','List of Loans that were disbursed automatically without approval','SELECT o_mpesa_queues.uid, o_customers.full_name, o_loans.account_number, o_mpesa_queues.amount, o_mpesa_queues.added_date, o_mpesa_queues.sent_date,\n o_mpesa_queues.trials, o_mpesa_queues.status  FROM stawika_db.o_mpesa_queues inner join o_loans on o_loans.uid = o_mpesa_queues.loan_id inner join o_customers on o_customers.primary_mobile = o_loans.account_number WHERE date(o_mpesa_queues.added_date) between {{{start_date}}} AND {{{end_date}}} ;',NULL,1,'2022-06-24 09:39:05','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'Loan Products Approved','List of customers with Loan products approved','SELECT o_customer_products.uid, o_loan_products.name, o_customers.full_name, o_customers.loan_limit, o_customers.primary_mobile  FROM stawika_db.o_customer_products\n inner join o_customers on o_customers.uid = \no_customer_products.customer_id inner join o_loan_products on o_loan_products.uid = o_customer_products.product_id where o_customer_products.status = 1 AND o_customers.status=1 ;',NULL,1,'2022-07-20 09:43:40','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'Last Loan Vs Limit','List of last loans given and current client limit','SELECT o_loans.uid, o_customers.full_name, o_customers.loan_limit, o_loans.account_number as mobile, o_loans.loan_amount as last_loan_amount, o_loans.given_date as given_date,o_loan_statuses.name as status \nFROM o_loans inner join o_loan_statuses on o_loan_statuses.uid = o_loans.status inner join o_customers on o_customers.uid = o_loans.customer_id WHERE o_loans.uid IN (SELECT MAX(o_loans.uid) \nFROM o_loans GROUP BY o_loans.customer_id) AND o_loans.given_date  BETWEEN {{{start_date}}} AND {{{end_date}}};',NULL,1,'2022-09-14 16:50:55','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'Limits Pending Approval','LImits that needs to be approved','SELECT o_customer_limits.uid, o_customers.full_name, o_customers.primary_mobile, o_customers.loan_limit as current_limit, o_customer_limits.amount as proposed_limit\n FROM stawika_db.o_customer_limits join o_customers on o_customers.uid = o_customer_limits.customer_uid WHERE o_customer_limits.status = 2 ;',NULL,1,'2023-02-02 10:09:51','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'B2C Queues ','List of money queues ','SELECT o_mpesa_queues.uid, o_mpesa_queues.loan_id, o_customers.full_name as customer_name ,o_loans.account_number as mobile_number , o_loans.customer_id as cid, \n o_mpesa_queues.amount, o_mpesa_queues.added_date, o_mpesa_queues.status FROM o_mpesa_queues \nleft join o_loans on o_loans.uid = o_mpesa_queues.loan_id left\njoin o_customers on o_customers.uid = o_loans.customer_id  order by uid desc limit 100;',NULL,1,'2023-06-01 12:54:46','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'Deleted Loans','List of loans deleted','SELECjT o_loans.uid, o_customers.full_name, o_customers.email_address, o_customers.national_id, o_loans.account_number as Phone, o_loans.loan_amount as Principal, o_loans.disbursed_amount, o_loans.total_repayable_amount as TotalAmount, o_loans.loan_balance as Balance, o_loans.transaction_code as Transcode, o_loans.given_date as Disbursement_Date, \no_loans.final_due_date as Repayment_Date, o_loans.current_instalment, o_loans.current_instalment_amount, o_loans.application_mode, o_loans.total_addons as Interest, o_loan_products.name as Product FROM stawika_db.o_loans inner join stawika_db.o_customers on o_customers.uid = o_loans.customer_id  inner join stawika_db.o_loan_products \non o_loan_products.uid = o_loans.product_id  where  o_loans.status = 0 AND o_loans.given_date  BETWEEN {{{start_date}}} AND {{{end_date}}};',NULL,1,'2023-06-27 08:20:51','',0);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'Loans Per Customer','List of customers and loans they have taken','SELECT\n    c.uid AS customer_id,\n    c.full_name AS customer_name,\n    SUM(l.loan_amount) AS total_loan_amount,\n    SUM(l.total_repayable_amount) AS total_repayable_amount,\n    SUM(l.total_repaid) AS total_repaid_amount,\n    SUM(l.total_repayable_amount - l.total_repaid) AS total_loan_balance,\n    SUM(l.income_earned) AS Income_Earned,\n    COUNT(l.customer_id) AS total_loans\nFROM\n    o_customers c\nLEFT JOIN\n    o_loans l ON c.uid = l.customer_id\nWHERE\n    l.disbursed= 1 AND l.status != 0 AND l.given_date BETWEEN {{{start_date}}} AND {{{end_date}}}\nGROUP BY\n    c.uid, c.full_name\nORDER BY\n    c.uid;','SELECT\n    c.uid AS customer_id,\n    c.full_name AS customer_name,\n    SUM(l.loan_amount) AS total_loan_amount,\n    SUM(l.total_repayable_amount) AS total_repayable_amount,\n    SUM(l.total_repaid) AS total_repaid_amount,\n    SUM(l.total_repayable_amount - l.total_repaid) AS total_loan_balance,\n    SUM(l.income_earned) AS Income_Earned,\n    COUNT(l.customer_id) AS total_loans\nFROM\n    o_customers c\nLEFT JOIN\n    o_loans l ON c.uid = l.customer_id\nWHERE\n    l.disbursed= 1 AND l.status != 0 AND l.given_date BETWEEN {{{start_date}}} AND {{{end_date}}}\nGROUP BY\n    c.uid, c.full_name\nORDER BY\n    c.uid;',1,'2024-02-04 20:14:55','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'Permissions','List of permissions','SELECT o_permissions.uid, \n       o_user_groups.name, \n       o_permissions.tbl, \n       o_permissions.rec, \n       o_permissions.general_, \n       o_permissions.create_, \n       o_permissions.read_, \n       o_permissions.update_, \n       o_permissions.delete_\nFROM o_permissions\nINNER JOIN o_user_groups \nON o_user_groups.uid = o_permissions.group_id\nWHERE o_permissions.uid > 0;','',1,'2024-02-28 14:35:47','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'Active Customers for given period','Number of active customers for a given period of time','SELECT COUNT(DISTINCT customer_id) AS total_unique_customers, SUM(loan_amount) AS total_loan_amount\nFROM o_loans\nWHERE given_date BETWEEN {{{start_date}}} AND {{{end_date}}} AND disbursed=1;','',1,'2024-03-01 17:24:58','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'Income per Month','Show income made every month','SELECT    DATE_FORMAT(o_loans.given_date, \\\'%Y-%m\\\') as Month,    SUM(o_loans.loan_amount) as Total_Loan_Amount,   SUM(o_loans.total_repayable_amount) as Total_Repayable_Amount,    SUM(o_loans.income_earned) as Total_Income,  SUM(o_loans.total_repaid) as Total_Repaid FROM     o_loans WHERE     o_loans.disbursed = 1     AND o_loans.status = 5     AND o_loans.given_date BETWEEN {{{start_date}}} AND {{{end_date}}} GROUP BY     DATE_FORMAT(o_loans.given_date, \\\'%Y-%m\\\') ORDER BY     Month;','SELECT    DATE_FORMAT(o_loans.given_date, \\\'%Y-%m\\\') as Month,    SUM(o_loans.loan_amount) as Total_Loan_Amount,   SUM(o_loans.total_repayable_amount) as Total_Repayable_Amount,    SUM(o_loans.income_earned) as Total_Income,  SUM(o_loans.total_repaid) as Total_Repaid FROM     o_loans WHERE     o_loans.disbursed = 1     AND o_loans.status = 5     AND o_loans.given_date BETWEEN {{{start_date}}} AND {{{end_date}}} GROUP BY     DATE_FORMAT(o_loans.given_date, \\\'%Y-%m\\\') ORDER BY     Month;',1,'2024-06-02 22:24:55','1',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'Loans Per Customer - Given Period','Show a list of customers and the loans they took in a given period of time','SELECT     c.full_name,     c.primary_mobile,     COUNT(l.loan_amount) AS number_of_loans,    c.total_loans as All_time_loans FROM    o_loans l JOIN    o_customers c ON l.customer_id = c.uid WHERE    l.disbursed = 1     AND l.status != 0    AND l.given_date BETWEEN {{{start_date}}} AND {{{end_date}}} GROUP BY  c.uid, c.full_name, c.primary_mobile;','SELECT     c.full_name,     c.primary_mobile,     COUNT(l.loan_amount) AS number_of_loans,    c.total_loans as All_time_loans FROM    o_loans l JOIN    o_customers c ON l.customer_id = c.uid WHERE    l.disbursed = 1     AND l.status != 0    AND l.given_date BETWEEN {{{start_date}}} AND {{{end_date}}} GROUP BY  c.uid, c.full_name, c.primary_mobile;',1,'2024-06-05 10:42:39','',1);
INSERT IGNORE INTO `o_reports` (`uid`,`title`,`description`,`row_query`,`branch_query`,`added_by`,`added_date`,`viewable_by`,`status`) VALUES (null,'Income per customer','Show income for each customer','SELECT \\n    o_loans.uid, \\n    o_customers.full_name, \\n    o_customers.email_address, \\n    o_customers.national_id, \\n    o_loans.account_number as Phone, \\n    o_loans.loan_amount as Principal, \\n    o_loans.total_repayable_amount as TotalAmount, \\n    o_loans.income_earned as Income, \\n    o_loans.total_repaid, \\n    o_loans.given_date as Disbursement_Date, \\n    o_loans.final_due_date as Repayment_Date, \\n    o_loans.application_mode\\nFROM \\n    o_loans \\nINNER JOIN \\n    o_customers \\nON \\n    o_customers.uid = o_loans.customer_id \\nINNER JOIN \\n    o_loan_statuses \\nON \\n    o_loans.status = o_loan_statuses.uid  \\nWHERE \\n    o_loans.disbursed = 1 \\n    AND o_loans.status = 5 \\n    AND o_loans.given_date BETWEEN {{{start_date}}} AND {{{end_date}}};','SELECT \\n    o_loans.uid, \\n    o_customers.full_name, \\n    o_customers.email_address, \\n    o_customers.national_id, \\n    o_loans.account_number as Phone, \\n    o_loans.loan_amount as Principal, \\n    o_loans.total_repayable_amount as TotalAmount, \\n    o_loans.income_earned as Income, \\n    o_loans.total_repaid, \\n    o_loans.given_date as Disbursement_Date, \\n    o_loans.final_due_date as Repayment_Date, \\n    o_loans.application_mode\\nFROM \\n    o_loans \\nINNER JOIN \\n    o_customers \\nON \\n    o_customers.uid = o_loans.customer_id \\nINNER JOIN \\n    o_loan_statuses \\nON \\n    o_loans.status = o_loan_statuses.uid  \\nWHERE \\n    o_loans.disbursed = 1 \\n    AND o_loans.status = 5 \\n    AND o_loans.given_date BETWEEN {{{start_date}}} AND {{{end_date}}};',1,'2024-08-05 15:53:38','',1);


/*
///----From Simplepay, Custom
*/


INSERT IGNORE INTO `o_reports_custom` (`uid`,`title`,`description`,`report_url`,`added_date`,`status`) VALUES (1,'Loans Breakdown','List of loans with full details','sp-loan-details.php','0000-00-00 00:00:00',1);
INSERT IGNORE INTO `o_reports_custom` (`uid`,`title`,`description`,`report_url`,`added_date`,`status`) VALUES (2,'Branch Performance','Branch disbursements and collections','sp-branch-performance-summaries.php','0000-00-00 00:00:00',1);
INSERT IGNORE INTO `o_reports_custom` (`uid`,`title`,`description`,`report_url`,`added_date`,`status`) VALUES (3,'Individual Performance','List of agents and their performance','sp-individual-performance-v3.php','0000-00-00 00:00:00',1);
INSERT IGNORE INTO `o_reports_custom` (`uid`,`title`,`description`,`report_url`,`added_date`,`status`) VALUES (4,'Leads Per Branch Report','Shows a summary of leads and active clients','sl-leads-per-branch.php','0000-00-00 00:00:00',1);
INSERT IGNORE INTO `o_reports_custom` (`uid`,`title`,`description`,`report_url`,`added_date`,`status`) VALUES (5,'Leads Per BDO Report','Shows a summary of leads and active clients','sp-leads-per-bdo.php','0000-00-00 00:00:00',1);
INSERT IGNORE INTO `o_reports_custom` (`uid`,`title`,`description`,`report_url`,`added_date`,`status`) VALUES (6,'Partial payments per branch','List of partial payments per branch','sp-partial-payments-per-branch.php','0000-00-00 00:00:00',1);
INSERT IGNORE INTO `o_reports_custom` (`uid`,`title`,`description`,`report_url`,`added_date`,`status`) VALUES (7,'Agent Closed Accounts','List of closed accounts by collection agents','sl-agent-closed-accounts.php','0000-00-00 00:00:00',1);
INSERT IGNORE INTO `o_reports_custom` (`uid`,`title`,`description`,`report_url`,`added_date`,`status`) VALUES (8,'Dormant Customers','List of customers with limits and no loan','sp-dormant-customers.php','0000-00-00 00:00:00',1);
INSERT IGNORE INTO `o_reports_custom` (`uid`,`title`,`description`,`report_url`,`added_date`,`status`) VALUES (11,'Dormant Customers(No Limit)','List of customers with no limit and no loan ','sp-dormant-customers-no-limit.php','0000-00-00 00:00:00',1);
INSERT IGNORE INTO `o_reports_custom` (`uid`,`title`,`description`,`report_url`,`added_date`,`status`) VALUES (12,'Payments Recon1','Check if the payments recorded in a loan are similar to the payments incoming','sl-payment-recon.php','0000-00-00 00:00:00',1);
INSERT IGNORE INTO `o_reports_custom` (`uid`,`title`,`description`,`report_url`,`added_date`,`status`) VALUES (13,'New Loans Disbursements','Show new loans disbursed in a set period','sp-new-loans-disbursements.php','0000-00-00 00:00:00',1);